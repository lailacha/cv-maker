name: Intro toCI

on: push
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORGANISATION_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:

  snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: install depencies
        run: pnpm install

      - name: Build to dist
        run: pnpm run build

      - name: start server
        run: pnpm run preview

      - name: Run docker to run script
        run: docker run -i --init --cap-add=SYS_ADMIN -v ./gen:/home/pptruser/gen --network host ghcr.io/puppeteer/puppeteer:latest node -e "$(cat snapshot.js)" http://localhost:4173 ./gen

      - name: Move to static folder
        run: mv ./gen ./build

      - name: Commit files
        run: |
          git config --local user.email "
            git config --local user.name "
            git add -A
            git commit -m "Snapshot"
            git push
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v4
#
#      - name: setup pnpm
#        uses: pnpm/action-setup@v2.4.0
#        with:
#          version: 8
#          run_install: false
#
#      - run: echo Hello {{env.NAME}}
#
#      - name: install depencies
#        run: pnpm install
#      - name: Get pnpm store directory
#        shell: bash
#        run: |
#          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
#
#      - uses: actions/cache@v3
#        name: Setup pnpm cache
#        with:
#          path: ${{ env.STORE_PATH }}
#          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-store-
#
#      - name: Install dependencies
#        run: pnpm install
#
#      - name: Install puppeteer
#        run: pnpm install puppeteer
#
#      # - name: Install Vercel CLI
#      #   run: npm install --global vercel@latest
#      # - name: Pull Vercel Environment Information
#      #   run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#      # - name: Build Project Artifacts
#      #   run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#      # - name: Deploy Project Artifacts to Vercel
#      #   run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build to dist
#        run: pnpm run build
#
#      - name: Run script snapshot.js
#        run: node ./build/snapshot.js
#
#      - name: Deploy to Netlify
#        uses: nwtgck/actions-netlify@v2.0
#        env:
#          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#        with:
#          publish-dir: './build'
#        timeout-minutes: 1
#
#
#
#
#
#